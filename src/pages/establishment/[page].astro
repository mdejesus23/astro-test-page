---
import establishment from "../../Data/data.";
import BaseLayout from "../../layout/BaseLayout.astro";

export async function getStaticPaths({ paginate }: any) {
  // Return a paginated collection of paths for all posts
  return paginate(establishment, { pageSize: 5 });
}

interface Item {
  name: string;
  country: string;
  classification: string;
}

interface Props {
  page: {
    data: Item[];
    start: number;
    end: number;
    size: number;
    total: number;
    currentPage: number;
    lastPage: number;
    url: {
      current: string;
      next: string;
      prev: string;
    };
  };
}

// If set up correctly, The page prop now has everything that
// you need to render a single page (see next section).
const { page } = Astro.props;
console.log(page);

const currentPage: number = page.currentPage;
const lastPage = page.lastPage;
const pagesArr: number[] = Array.from({ length: lastPage }, (_, i) => i + 1);
console.log(pagesArr);
---

<BaseLayout>
  <h1>Institution Databases</h1>
  <main>
    <div class="page-controller">
      {
        page.url.prev ? (
          <a class={page.url.prev ? "active" : "inactive"} href={page.url.prev}>
            &#8249;
          </a>
        ) : (
          <a class={page.url.prev ? "active" : "inactive"}>&#8249;</a>
        )
      }
      <div class="dropdown">
        <div class="dropdown-controller">
          <button class="dropbtn">{`Pages ${currentPage}`}</button>
          <p>{`of ${lastPage}`}</p>
        </div>

        <div class="dropdown-content">
          {
            pagesArr.map((pageNum) => (
              <a
                class="dropdown-opt"
                id={`${pageNum}`}
                href={`/establishment/${pageNum}`}
              >
                {pageNum}
              </a>
            ))
          }
        </div>
      </div>
      {
        page.url.next ? (
          <a class={page.url.next ? "active" : "inactive"} href={page.url.next}>
            &#8250;
          </a>
        ) : (
          <a class={page.url.next ? "active" : "inactive"}>&#8250;</a>
        )
      }
    </div>
    <table>
      <thead>
        <tr>
          <th>Name</th>
          <th>Country</th>
          <th>Classification</th>
        </tr>
      </thead>
      <tbody>
        {
          page.data.map((item: Item) => (
            <tr>
              <td>{item.name}</td>
              <td>{item.country}</td>
              <td>{item.classification}</td>
            </tr>
          ))
        }
      </tbody>
    </table>
  </main>
</BaseLayout>
